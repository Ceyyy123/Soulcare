{"ast":null,"code":"let users = [];\nexport const registerUser = (email, password) => {\n  const userExists = users.some(user => user.email === email);\n  if (userExists) {\n    throw new Error('User already exists');\n  }\n  users.push({\n    email,\n    password\n  });\n  return true;\n};\nexport const loginUser = (email, password) => {\n  const user = users.find(user => user.email === email && user.password === password);\n  if (!user) {\n    throw new Error('Invalid email or password');\n  }\n  return true;\n};","map":{"version":3,"names":["users","registerUser","email","password","userExists","some","user","Error","push","loginUser","find"],"sources":["C:/Users/ceyda/Java-projekte/soulcare_project/soulcare/frontend/src/authService.js"],"sourcesContent":["let users = [];\r\n\r\nexport const registerUser = (email, password) => {\r\n  const userExists = users.some(user => user.email === email);\r\n  if (userExists) {\r\n    throw new Error('User already exists');\r\n  }\r\n  users.push({ email, password });\r\n  return true;\r\n};\r\n\r\nexport const loginUser = (email, password) => {\r\n  const user = users.find(user => user.email === email && user.password === password);\r\n  if (!user) {\r\n    throw new Error('Invalid email or password');\r\n  }\r\n  return true;\r\n};\r\n"],"mappings":"AAAA,IAAIA,KAAK,GAAG,EAAE;AAEd,OAAO,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC/C,MAAMC,UAAU,GAAGJ,KAAK,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,KAAK,KAAKA,KAAK,CAAC;EAC3D,IAAIE,UAAU,EAAE;IACd,MAAM,IAAIG,KAAK,CAAC,qBAAqB,CAAC;EACxC;EACAP,KAAK,CAACQ,IAAI,CAAC;IAAEN,KAAK;IAAEC;EAAS,CAAC,CAAC;EAC/B,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMM,SAAS,GAAGA,CAACP,KAAK,EAAEC,QAAQ,KAAK;EAC5C,MAAMG,IAAI,GAAGN,KAAK,CAACU,IAAI,CAACJ,IAAI,IAAIA,IAAI,CAACJ,KAAK,KAAKA,KAAK,IAAII,IAAI,CAACH,QAAQ,KAAKA,QAAQ,CAAC;EACnF,IAAI,CAACG,IAAI,EAAE;IACT,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EACA,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}