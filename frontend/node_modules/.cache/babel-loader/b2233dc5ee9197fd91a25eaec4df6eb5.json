{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ceyda\\\\Java-projekte\\\\soulcare_project\\\\soulcare\\\\frontend\\\\src\\\\pages\\\\Journal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format } from 'date-fns/esm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Journal() {\n  _s();\n  const [entry, setEntry] = useState('');\n  const [date, setDate] = useState(new Date());\n  const [entries, setEntries] = useState([]);\n  const fetchEntries = async () => {\n    const response = await fetch('/api/journal', {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      }\n    });\n    const data = await response.json();\n    setEntries(data);\n  };\n  useEffect(() => {\n    fetchEntries();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formattedDate = format(date, 'yyyy-MM-dd');\n    const response = await fetch('/api/journal', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        date: formattedDate,\n        content: entry\n      })\n    });\n    const data = await response.json();\n    setEntries([...entries, data]);\n    setEntry('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"journal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Journal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Datum:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: date,\n          onChange: date => setDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Eintrag:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: entry,\n          onChange: e => setEntry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Speichern\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"journal-entries\",\n      children: entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"journal-entry\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: entry.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: entry.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Journal, \"ZbGVYa+8bG8P+Dji/1b1A8t/id4=\");\n_c = Journal;\nexport default Journal;\nvar _c;\n$RefreshReg$(_c, \"Journal\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","format","jsxDEV","_jsxDEV","Journal","_s","entry","setEntry","date","setDate","Date","entries","setEntries","fetchEntries","response","fetch","headers","localStorage","getItem","data","json","handleSubmit","e","preventDefault","formattedDate","method","body","JSON","stringify","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","selected","onChange","value","target","type","map","index","_c","$RefreshReg$"],"sources":["C:/Users/ceyda/Java-projekte/soulcare_project/soulcare/frontend/src/pages/Journal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format } from 'date-fns/esm';\n\nfunction Journal() {\n  const [entry, setEntry] = useState('');\n  const [date, setDate] = useState(new Date());\n  const [entries, setEntries] = useState([]);\n\n  const fetchEntries = async () => {\n    const response = await fetch('/api/journal', {\n      headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\n    });\n    const data = await response.json();\n    setEntries(data);\n  };\n\n  useEffect(() => {\n    fetchEntries();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formattedDate = format(date, 'yyyy-MM-dd');\n    const response = await fetch('/api/journal', {\n      method: 'POST',\n      headers: { \n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      },\n      body: JSON.stringify({ date: formattedDate, content: entry })\n    });\n    const data = await response.json();\n    setEntries([...entries, data]);\n    setEntry('');\n  };\n\n  return (\n    <div className=\"journal-container\">\n      <h2>Journal</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Datum:</label>\n          <DatePicker selected={date} onChange={(date) => setDate(date)} />\n        </div>\n        <div>\n          <label>Eintrag:</label>\n          <textarea value={entry} onChange={(e) => setEntry(e.target.value)} />\n        </div>\n        <button type=\"submit\">Speichern</button>\n      </form>\n      <div className=\"journal-entries\">\n        {entries.map((entry, index) => (\n          <div key={index} className=\"journal-entry\">\n            <strong>{entry.date}</strong>\n            <p>{entry.content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Journal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}